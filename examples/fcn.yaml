global:
  model_count: 5
  rounds: 50
  description: СIFAR10 dataset, CNN (AlexNet structure)
  short_name: СIFAR10
  round_train_data_mode: each_round_add_new # each_round_new or each_round_add_new - только новые данные или старые + новые
dataset:
  labels: [label_0, label_1, label_2, label_3, label_4, label_5, label_6, label_7, label_8, label_9, label_10, label_11, label_12, label_13, label_14, label_15, label_16, label_17, label_18, label_19, label_20, label_21, label_22, label_23, label_24, label_25, label_26, label_27, label_28, label_29, label_30, label_31, label_32, label_33, label_34, label_35, label_36, label_37, label_38, label_39, label_40, label_41, label_42, label_43, label_44, label_45, label_46, label_47, label_48, label_49, label_50, label_51, label_52, label_53, label_54, label_55, label_56, label_57, label_58, label_59, label_60, label_61, label_62, label_63, label_64, label_65, label_66, label_67, label_68, label_69, label_70, label_71, label_72, label_73, label_74, label_75, label_76, label_77, label_78, label_79, label_80, label_81, label_82, label_83, label_84, label_85, label_86, label_87, label_88, label_89, label_90, label_91, label_92, label_93, label_94, label_95, label_96, label_97, label_98, label_99]
   
local_model:
  structure:
    input_shape: [ 32, 32, 3]  #  [ 32, 32, 3] or [ 784]
    type: conv # conv or fcn
    layers: # for convolutional networks
      - layer:
          type: conv2d
          filters: 96
          strides: [4,4] # 2 or [2,2]
          padding: valid
          kernel: [3,3]
      - layer:
          type: maxpooling2d
          kernel: [2,2]
          strides: 2
      - layer:
          type: conv2d
          filters: 256
          strides: [2,2] # 2 or [2,2]
          padding: same
          kernel: [5,5]
      - layer:
          type: maxpooling2d
          kernel: [2,2]
          strides: 2
      - layer:
          type: conv2d
          filters: 384
          strides: [2,2] # 2 or [2,2]
          padding: same
          kernel: [3,3]
      - layer:
          type: conv2d
          filters: 384
          strides: [2,2] # 2 or [2,2]
          padding: same
          kernel: [3,3]
      - layer:
          type: conv2d
          filters: 256
          strides: [2,2] # 2 or [2,2]
          padding: same
          kernel: [3,3]
      - layer:
          type: maxpooling2d
          kernel: [2,2]
          strides: 2      
    fcn_hidden_layers: 2
    fcn_hidden_layer_neurons: 150  #[600, 1024, 512, 256, 128]  or 100
  loss: categorical_crossentropy
  optimizer: adam
  metrics: [categorical_accuracy]
  batch_size: 128
  validation_split: 0.05
  epochs: 15
  debug: True

defence: none # none, dropout, pckd, data_spoof, noise
dropout:
  rate: 0.5
pckd:
  K: 4
  teacher_epochs: 3
noise:
  scale: 0.1
data_spoof:
  corr_limit: 0.05
  truth_limit: 0.5
  set_student_layer_num: 0
  set_student_prob: 0.0